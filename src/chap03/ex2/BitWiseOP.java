package chap03.ex2;

public class BitWiseOP {

	public static void main(String[] args) {
		
		// 2. 비트연산자 : & AND , | OR, ^ XOR, ~ NOT
			// 2진법으로 변환해서 연산됨
		// & AND 연산 : 0 & 0 = 0 , 0 & 1 = 0, 1 & 0 = 0 , 1 & 1 = 1
		
		System.out.println(3 & 10); //2 
		/* 3  = 0011 
		   10 = 1010
		========================== AND         	각 비트를 AND연산(논리곱)
				0010 = 2
		*/
		
		// | OR 연산 : 0 | 0 = 0 , 0 | 1 = 1, 1 | 0 = 1 , 1 | 1 = 1
		
			System.out.println(3 | 10); 
				/* 3  = 0011 
				   10 = 1010
				========================== OR  	각 비트를 OR연산(논리힙)
						1011 = 11
					하나라도 1 이있으면 1
				*/
		
			// ^ XOR 연산 : 0 ^ 0 = 0 , 0 ^ 1 = 1, 1 ^ 0 = 1, 1 ^ 1 = 0 ==> 다를 때 1 , 같을 때 0
			
			System.out.println(3 ^ 10); 
			/* 3  = 0011 
			   10 = 1010
			========================== XOR    	각 비트를 XOR연산(베타적논리합)
					1001 = 9
			*/
			
			// ~ NOT 연산 : ~0 = 1 , ~1 = 0 반대로 출력
			
			System.out.println(~3); 
						/* 3  = 0011    1 0011 ==> +3 부호비트가 가장 앞에 있음
						========================== NOT 각 비트를 NOT연산 반대로출력
								1100	0 1100 <== -4
						*/
			System.out.println(~10);//-11
	}

}
